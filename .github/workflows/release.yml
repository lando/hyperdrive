name: Create CLI Releases

on:
  release:
    types:
      - published

jobs:
  package:
    runs-on: ubuntu-22.04
    env:
      TERM: xterm
    strategy:
      matrix:
        arch:
          - x64
          - arm64
        node-version:
          - '16'
        os:
          - linux
          - macos
          - win
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - name: Install Yarn dependencies
        run: yarn install --prefer-offline --frozen-lockfile --production
      - name: Package into node binary
        uses: lando/pkg-action@v2
        with:
          entrypoint: bin/hyperdrive
          arch: ${{ matrix.arch }}
          node-version: node${{ matrix.node-version }}
          os: ${{ matrix.os }}

  sign-n-deploy:
    runs-on: ${{ matrix.os }}
    needs:
      - package
    env:
      TERM: xterm
    strategy:
      matrix:
        include:
          - os: windows-2022
            key: hyperdrive-node16-win-x64-${{ github.sha }}
            file: hyperdrive/hyperdrive.exe
            certificate-data: WINDOZE_CERT_DATA
            certificate-password: WINDOZE_CERT_PASSWORD
            result: hyperdrive-win-x64-${{ github.ref_name }}.exe
            compressed: hyperdrive-win-x64-${{ github.ref_name }}.tar.gz
          - os: windows-2022
            key: hyperdrive-node16-win-arm64-${{ github.sha }}
            file: hyperdrive/hyperdrive.exe
            certificate-data: WINDOZE_CERT_DATA
            certificate-password: WINDOZE_CERT_PASSWORD
            result: hyperdrive-win-arm64-${{ github.ref_name }}.exe
            compressed: hyperdrive-win-arm64-${{ github.ref_name }}.tar.gz
          - os: macos-12
            key: hyperdrive-node16-macos-x64-${{ github.sha }}
            file: hyperdrive/hyperdrive
            certificate-data: APPLE_CERT_DATA
            certificate-password: APPLE_CERT_PASSWORD
            apple-product-id: dev.lando.hyperdrive
            apple-team-id: FY8GAUX282
            apple-notary-user: APPLE_NOTARY_USER
            apple-notary-password: APPLE_NOTARY_PASSWORD
            options: --options runtime --entitlements entitlements.xml
            result: hyperdrive-macos-x64-${{ github.ref_name }}
            compressed: hyperdrive-macos-x64-${{ github.ref_name }}.tar.gz
          - os: macos-12
            key: hyperdrive-node16-macos-arm64-${{ github.sha }}
            file: hyperdrive/hyperdrive
            certificate-data: APPLE_CERT_DATA
            certificate-password: APPLE_CERT_PASSWORD
            apple-product-id: dev.lando.hyperdrive
            apple-team-id: FY8GAUX282
            apple-notary-user: APPLE_NOTARY_USER
            apple-notary-password: APPLE_NOTARY_PASSWORD
            options: --options runtime --entitlements entitlements.xml
            result: hyperdrive-macos-arm64-${{ github.ref_name }}
            compressed: hyperdrive-macos-arm64-${{ github.ref_name }}.tar.gz
          - os: ubuntu-22.04
            key: hyperdrive-node16-linux-x64-${{ github.sha }}
            file: hyperdrive/hyperdrive
            result: hyperdrive-linux-x64-${{ github.ref_name }}
            compressed: hyperdrive-linux-x64-${{ github.ref_name }}.tar.gz
          - os: ubuntu-22.04
            key: hyperdrive-node16-linux-arm64-${{ github.sha }}
            file: hyperdrive/hyperdrive
            result: hyperdrive-linux-arm64-${{ github.ref_name }}
            compressed: hyperdrive-linux-arm64-${{ github.ref_name }}.tar.gz

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download ${{ matrix.key }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.key }}
          path: hyperdrive
      - name: Sign and Notarize
        uses: lando/code-sign-action@v2
        id: code-sign-action
        with:
          file: ${{ matrix.file }}
          certificate-data: ${{ secrets[matrix.certificate-data] }}
          certificate-password: ${{ secrets[matrix.certificate-password] }}
          apple-notary-user: ${{ secrets[matrix.apple-notary-user] }}
          apple-notary-password: ${{ secrets[matrix.apple-notary-password] }}
          apple-product-id: ${{ matrix.apple-product-id }}
          apple-team-id: ${{ matrix.apple-team-id }}
          options: ${{ matrix.options }}
      - name: Rename as needed
        shell: bash
        run: |
          mkdir -p releases
          cp ${{ steps.code-sign-action.outputs.file }} releases/${{ matrix.result }}
          if [ "${{ github.event.release.prerelease }}" ==  "false" ]; then
            cp releases/${{ matrix.result }} "releases/$(echo ${{ matrix.result }} | sed 's/${{ github.ref_name }}/stable/;')"
          else
            cp releases/${{ matrix.result }} "releases/$(echo ${{ matrix.result }} | sed 's/${{ github.ref_name }}/edge/;')"
          fi
          chmod +x releases/*
          ls -lsa releases
      - name: Configure S3 Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload releases to S3
        shell: bash
        run: aws s3 sync releases s3://files.lando.dev/hyperdrive
      - name: Make Compressed Versions
        shell: bash
        run: |
          tar -czvf releases/${{ matrix.compressed }} -C releases ${{ matrix.result }}
          ls -lsa releases
      - name: Upload releases to GitHub Releases
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            releases/${{ matrix.result }}
            releases/${{ matrix.compressed }}
          fail_on_unmatched_files: true
      - name: Set macOS release SHA 256
        id: shasum-mac-os
        run: echo "sha="(shasum -a 256 releases/${{ matrix.compressed }} | awk '{printf $1}')" >> $GITHUB_OUTPUT

  homebrew-releaser:
    runs-on: ubuntu-latest
    needs:
      - sign-n-deploy
    name: homebrew-releaser
    steps:
      - name: Release my project to my Homebrew tap
        uses: reynoldsalec/homebrew-releaser@9-custom-tar-url
        with:
          # The name of the homebrew tap to publish your formula to as it appears on GitHub.
          # Required.
          homebrew_owner: lando
          homebrew_tap: homebrew-lando

          # The name of the folder in your homebrew tap where formula will be committed to.
          # Default is shown.
          formula_folder: Formula

          # The GitHub Token (saved as a repo secret) that has `repo` permissions for the homebrew tap you want to release to.
          # Required.
          github_token: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}

          # Git author info used to commit to the homebrew tap.
          # Defaults are shown.
          commit_owner: Lando Droid
          commit_email: droid@lando.dev

          # Custom install command for your formula.
          # Required.
          install: 'bin.install "hyperdrive-macos-#{arch}-v#{version}" => "hyperdrive"'

          # Custom test command for your formula so you can run `brew test`.
          # Optional.
          test: 'system "#{bin}/hyperdrive" "--version"'

          # Adds URL and checksum targets for different OS and architecture pairs. This assumes
          # a tar archive exists on your GitHub repo with the following URL pattern:
          # https://github.com/{GITHUB_OWNER}/{REPO_NAME}/releases/download/{TAG}/{REPO_NAME}-{VERSION}-{OPERATING_SYSTEM}-{ARCHITECTURE}.tar.gz'
          # Darwin AMD: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-darwin-amd64.tar.gz
          # Linux ARM: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-linux-arm64.tar.gz
          # Optional.
          target_darwin_amd64: https://github.com/lando/hyperdrive/releases/download/${{ github.ref_name }}/hyperdrive-macos-x64-${{ github.ref_name }}.tar.gz
          target_darwin_arm64: https://github.com/lando/hyperdrive/releases/download/${{ github.ref_name }}/hyperdrive-macos-arm64-${{ github.ref_name }}.tar.gz
          target_linux_amd64: false
          target_linux_arm64: false

          # Update your homebrew tap's README with a table of all projects in the tap.
          # This is done by pulling the information from all your formula.rb files - eg:
          #
          # | Project                                    | Description  | Install                  |
          # | ------------------------------------------ | ------------ | ------------------------ |
          # | [formula_1](https://github.com/user/repo1) | helpful text | `brew install formula_1` |
          # | [formula_1](https://github.com/user/repo2) | helpful text | `brew install formula_2` |
          # | [formula_1](https://github.com/user/repo3) | helpful text | `brew install formula_3` |
          #
          # Simply place the following in your README or wrap your project in these comment tags:
          # <!-- project_table_start -->
          # TABLE HERE
          # <!--project_table_end -->
          #
          # Finally, mark `update_readme_table` as `true` in your GitHub Action config and we'll do the work of building a custom table for you.
          # Default is `false`.
          update_readme_table: true

          # Skips committing the generated formula to a homebrew tap (useful for local testing).
          # Default is shown.
          skip_commit: false

          # Logs debugging info to console.
          # Default is shown.
          debug: true
